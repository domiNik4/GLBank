/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package main.ui.panels;

import java.util.List;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import main.Accounts;
import main.BankTransaction;
import main.CashTransaction;
import main.Client;
import main.Database.ConnectionProvider;

/**
 *
 * @author pc
 */
public class JPanelTransHistory extends javax.swing.JPanel {
    private int idc;
    private List<Accounts> accountsList ;
    private List<BankTransaction> bankTransactionsList;
    private List<CashTransaction> cashTransactionList;
    private ConnectionProvider cp;
    
    /**
     * Creates new form JPanelTransHistory
     */
    public JPanelTransHistory(Client chosenClient) {
        initComponents();
        initComponents();
        this.idc=chosenClient.getIdc();
        cp=new ConnectionProvider();
        this.accountsList=cp.getAccounts(idc);
        showListOfAccounts();
        loadCashTransactions();
    }
    
    private void showListOfAccounts(){  
        accountsList =cp.getAccounts(idc);
        if(accountsList!=null && accountsList.size()>0){
            for( Accounts account : accountsList){
                String item = account.getIdAcc()+"";
                comboAccountsH.addItem(item);
                System.out.println(item);
                }
        }
    }  
    
   
    private void loadBankTransactions(){
        long idacc=Long.valueOf(comboAccountsH.getSelectedItem().toString());
        bankTransactionsList =cp.getBankTransactions(idacc);
        
        transactionTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID","Account ID" ,"Amount","Datetime","Employee ID"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        
        DefaultTableModel model = (DefaultTableModel) transactionTable.getModel();
        int rowCount=transactionTable.getRowCount();
        for (int i = rowCount - 1; i >= 0; i--) {
            model.removeRow(i);
        }
        
        for(BankTransaction bt : bankTransactionsList){
            model.addRow(new Object[]{bt.getIdbt(),bt.getDestacc(),bt.getAmount(),bt.getTransdatetime(),bt.getIdemp()});
        } 
        
    }
    private void loadCashTransactions(){
        long idacc=Long.valueOf(comboAccountsH.getSelectedItem().toString());
        cashTransactionList =cp.getCashTransactions(idacc);
        
        transactionTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID","Amount","Datetime","Employee ID"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        
        DefaultTableModel model = (DefaultTableModel) transactionTable.getModel();
        int rowCount=transactionTable.getRowCount();
        for (int i = rowCount - 1; i >= 0; i--) {
            model.removeRow(i);
        }
        
        for(CashTransaction ct : cashTransactionList){
            model.addRow(new Object[]{ct.getId(),ct.getAmount(),ct.getDate(),ct.getIdemp()});
        } 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        transactionCombo = new javax.swing.JComboBox<>();
        comboAccountsH = new javax.swing.JComboBox<>();
        historyScrollPane = new javax.swing.JScrollPane();
        transactionTable = new javax.swing.JTable();

        jLabel1.setText("Transaction History");

        jLabel3.setText("Account:");

        jLabel4.setText("Transaction type:");

        transactionCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cash transactions", "Bank transactions", " " }));
        transactionCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                transactionComboActionPerformed(evt);
            }
        });

        comboAccountsH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboAccountsHActionPerformed(evt);
            }
        });

        transactionTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        historyScrollPane.setViewportView(transactionTable);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(291, 291, 291)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(historyScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 739, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(comboAccountsH, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(31, 31, 31)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(transactionCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(127, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel1)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(transactionCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3)
                    .addComponent(comboAccountsH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(historyScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 363, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(38, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void transactionComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_transactionComboActionPerformed
        // TODO add your handling code here:
        int index=transactionCombo.getSelectedIndex();
        if(index==0){
            loadCashTransactions();
        }
        if(index==1){
            loadBankTransactions();
            
        }
    }//GEN-LAST:event_transactionComboActionPerformed

    private void comboAccountsHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboAccountsHActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboAccountsHActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> comboAccountsH;
    private javax.swing.JScrollPane historyScrollPane;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JComboBox<String> transactionCombo;
    private javax.swing.JTable transactionTable;
    // End of variables declaration//GEN-END:variables
}
